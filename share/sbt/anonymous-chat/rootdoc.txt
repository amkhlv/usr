This is my file server

Pay __ATTENTION__ to the value of `application.secret`

= Building this documentation =

{{{
sbt clean doc
}}}

= Files =

List of files:

 - `/etc/anonymous-chat/application.conf` : the main configuration file, includes :
    - `application.secret` : the secret key
    - `chat.origin` : the URL of the server, e.g. `https://andreimikhailov.com` (this has to match the `Origin` header in the HTTP request)
    - `chat.secure=true`
    - `chat.workdir = "/var/www/chat-users"`
 - `/etc/systemd/system/amkhlv-pile.service` (if using systemd):
{{{
[Unit]
Description=chat server

[Service]
ExecStart=/opt/anonymous-chat/bin/anonymous-chat  -Dconfig.file=/etc/anonymous-chat/application.conf -Dhttp.port=29431 -Dhttp.address=127.0.0.1 -Dpidfile.path=/tmp/amkhlv-chat.pid
PIDFile=/tmp/amkhlv-chat.pid
User=www-data

[Install]
WantedBy=multi-user.target
}}}
 - `/opt/anonymous-chat/` : the directory for binaries and jars
 - `/opt/anonumous-chat/conf/logger.xml` : this file configures the logging 
 (unfortunately this one is impossible to configure in the `/etc/systemd/system/amkhlv-chat.service` because the option `-Dlogger.file` is broken)
 - `/var/www/chat-users` : the user directory; contains :
    - `config.xml` e.g. :
{{{
<users>
  <user name="aaa" hash="$2a$10$...." color="green"/>
  ...
</users>
}}}
       where the hash value is obtained as follows: at the sbt prompt,
       say `console`, this will start the Scala console. At the Scala prompt: `scala> controllers.Utils.mkpasswd`
       (It will ask for the plaintext password, and then print the hash)
       and `color` is  [[http://www.w3schools.com/html/html_colornames.asp HTML colornames]]

= Nginx =

{{{
location /chat/ {
    auth_basic "Restricted";
    auth_basic_user_file htpasswd_chat;
    try_files $uri @proxy_chat;
}
location /chat/ws {
    auth_basic "Restricted";
    auth_basic_user_file htpasswd_chat;
        proxy_pass http://localhost:29431;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    proxy_read_timeout 3600s;
    }
location @proxy_chat {
    proxy_pass  http://localhost:29431;
    proxy_redirect off;
    proxy_buffering off;
    #send protocol info to play server
    proxy_set_header        Host               $host;
    proxy_set_header        X-Real-IP          $remote_addr;
    proxy_set_header        X-Forwarded-Proto  https;
    proxy_set_header        X-Forwarded-Ssl    on;
    proxy_set_header        X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header        X-Scheme           $scheme;
    }
}}}
